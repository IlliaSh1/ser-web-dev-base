@use "../abstract/colors" as C;

:root {
    --link-color:#343045;
    --light-gradient-color: C.get-color(accent-light-bg);
    --dark-gradient-color: C.get-color(accent-dark-bg);
}


.txt {
    &--gradient_1 {
        background: linear-gradient(90deg, var(--light-gradient-color), var(--dark-gradient-color));
        background-color: var(--light-gradient-color);

        color: transparent;
        -webkit-text-fill-color: transparent;
        background-clip: text;

        
    }
    &--gradient_2 {
        -webkit-text-fill-color: transparent;
        background: linear-gradient(90deg, var(--dark-gradient-color) ,var(--light-gradient-color));
        background-color: var(--light-gradient-color);

        color: transparent;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }
}

.btn {
    cursor: pointer;
    &:focus-visible {
        outline: C.get-color(focus-outline) .15em solid;
    }
    &--theme_off {
        background: none;
        border: none;
        padding: 0;
    }
    
    &--theme1 {
        position: relative;
        border: none;
        display: inline-block;
        color: C.get-color(bg);
        background-color: var(--light-gradient-color);
        background: linear-gradient(90deg, C.get-color(accent-dark-bg) 0%, C.get-color(accent-light-bg) 100%);
        padding: 1em calc(1em + 2vw);
        
        border-radius: 100vh;

        text-align: center;
        vertical-align: middle;
        &:active {
            top:1vh;
        }
        &::after {
            content: none;
        }
    }

    &--theme2 {
        box-sizing: content-box;
        position: relative;
        display: inline-block;
        color: C.get-color(accent-light-txt);
        background-color: transparent;
        outline: .15em solid C.get-color(accent-light-txt);
        padding: .5em calc(.5em + 2vw);
        
        border-radius: 100vh;

        vertical-align: middle;
        text-align: center;
        
        &:hover {}

        &:focus-visible {
            background-color: C.get-color(focus-outline);
            outline: white .15em solid;
        }

        &:active {
            top: 4px;
        }
        &::after {
            content: none;
        }
    }

    &--theme_add_dark {
        border: none;
        position: relative;
        color: C.get-color(light-text);
        @include C.gradient(C.get-color(add-dark-bg), C.get-color(add-light-bg), 90);
        // background-color: C.gradient(--light-gradient-color);
        
        // background: linear-gradient(90deg, C.get-color(accent-dark-bg) 0%, C.get-color(accent-light-bg) 100%);
        padding: 1em calc(1em + 2vw);
        
        border-radius: 100vh;

        text-align: center;
        vertical-align: middle;
        &:active {
            top:1vh;
        }
        &::after {
            content: none;
        }
    }
}


.link {
    cursor: pointer;
    position: relative;



    &::after {
        content: "";
        position: absolute;
        display: block;
        
        width: 100%;
        height: calc(2px + .1vw);
        background-color: currentColor;
        transition: transform .3s;
    }

    &:hover::after {
        transform: scaleX(0);
    }

    &:focus-visible {
        outline: C.get-color(focus-outline) .15em solid;
    }

    &--hover_off {
        
        &::after {
            content: none;
        }
        &::before {
            content: none;
        }
    }

    &--theme_btn1 {
        box-sizing: content-box;
        position: relative;
        display: inline-block;
        color: C.get-color(accent-light-txt);
        background-color: var(--light-gradient-color);
        background: linear-gradient(90deg, var(--dark-gradient-color) 0%, var(--light-gradient-color) 100%);
        
        padding: 1em calc(1em + 2vw);
        
        border-radius: 100vh;

        text-align: center;
        vertical-align: middle;

        &:focus-visible {
            outline: C.get-color(focus-outline) .15em solid;
        }

        &:active {
            top:4px;
        }
        &::after {
            content: none;
        }
        
    }

    &--theme_btn2 {
        box-sizing: content-box;
        position: relative;
        display: inline-block;
        color: C.get-color(accent-light-txt);
        background-color: transparent;
        outline: .15em solid C.get-color(accent-light-txt);
        padding: .5em calc(.5em + 2vw);
        
        border-radius: 100vh;

        vertical-align: middle;
        text-align: center;
        
        &:hover {}

        &:focus-visible {
            background-color: C.get-color(focus-outline);
            outline: white .15em solid;
        }

        &:active {
            top:4px;
        }
        &::after {
            content: none;
        }
    }
    
}

.label {
    display: block;
    position: relative;
    margin: .5em 0;
    &__txt {
        color: transparent;
        position: absolute;
        top: .5em;
        left: calc(1.1em + 1vw);
    }

    &__error-msg {
        font-weight: 400;
        color: transparent;
        margin-top: .5em;
        display: block;
    }

    &--row_3 {
        grid-row: span 3;
    }

    &--select {
        display: flex;
        flex-direction: column;

        .label__txt {
            order: -1;
            color: currentColor;
            position: static;
            top: 0;
            left: 0;
        }

        .label__error-msg {
            margin-top: .1em 0;
        }

        .input, .textarea {
            margin: 0.3em 0;
        }
    }

    &--checkbox {
        display: flex;
        align-items: center;
        .label__txt {
            position: static;
            order: 1;
        }
        .input {
            outline-color: transparent;
            &:not(:focus):not(:placeholder-shown):valid {
                outline-color: transparent;
            }
            &:not(:focus):not(:placeholder-shown):invalid {
                outline-color: transparent;
            }
        }
    }
}

@media screen and (min-width:768px) {
    .label {
        &--col_2 {
            grid-column: span 2;
        }
    
    }    
}

%input-base {
    &:autofill ~ span {
        color: transparent;
    }

    &:not(:placeholder-shown) ~ .label__txt {
        color: inherit;
    }

    & ~ .label__error-msg {
        user-select: none;
    }

    &:not(:focus):not(:placeholder-shown):invalid ~ .label__error-msg {
        color: C.get-color(invalid-txt);
        user-select: auto;
    }

    &:not(:focus):not(:placeholder-shown):valid {
        outline-color: C.get-color(valid-txt);
    }
    &:not(:focus):not(:placeholder-shown):invalid {
        outline-color: C.get-color(invalid-txt);
    }
    &:focus-visible {
        outline-color: C.get-color(focus-outline);
        outline-width: .3em;
    }

}

.input, .textarea {
    border: none;
    @extend %input-base;
}

@mixin input--theme_1 {
    padding: .6em .5em;
    display: inline-block;
    position: relative;
    outline-width: .25em;
    outline-color: C.get-color(accent-dark-bg);

    background-color: lighten(C.get-color(accent-dark-bg), 10%);
    color: C.get-color(accent-light-txt);
    &::placeholder {
        color: white;
    }
    border-radius: 1rem;
}

.input {
    margin: 1em 0px;
    outline: .15em solid C.get-color(text);
    &--theme_1 {
        @include input--theme_1();
        
    }
    &--theme_2 {
        // position: relative;
        display: inline-block;
        color: black;
        background-color: transparent;
        outline: .15em solid black;
        padding: 1.8em calc(.3em + 1vw);
        padding-bottom: 1em;
        border-radius: 100vh;
        &::placeholder {
            color: dimgray;
        }
        width: 100%;
        min-height: 5vmin;
    }
}

.textarea {
    outline: .15em solid black;
    display: block;
    width: 100%;
    min-height: 7em;

    resize: none;

    &::placeholder{
        color: dimgray;
    }

    &--theme_1 {
        @include input--theme_1();
        border-radius: 10px;
        
        &::-webkit-scrollbar-track {
            background-color: #e4e4e4;
            border-radius: 100px;
        }

        &::-webkit-scrollbar-thumb {
            border-radius: 100px;
            border: 6px solid rgba(0, 0, 0, 0.18);
            border-left: 0;
            border-right: 0;
            background-color: C.get-color(accent-dark-txt);
        }
        &::-webkit-scrollbar {
            width: 20px;
        }

    }
    
    &--theme2 {
        display: inline-block;
        color: black;
        background-color: transparent;
        outline: .15em solid black;
        padding: 1px 2px;
        padding-bottom: 1em;
        width: 100%;
        
    }

}


.burger-menu {
    &.active {

        & .burger-menu__top-line {

            transform: translateX(2px) translateY(1.5px) rotate(45deg) ;
        }

        & .burger-menu__middle-line {

            transform: translateX(-100%);
        }

        & .burger-menu__bottom-line {

            transform: translateX(2px) translateY(-1.5px) rotate(-45deg);
        }
    }

    @mixin burger-menu__line {
        transform-origin: 50% 50%;
        transition: transform .2s linear;
        transform: none;
    }

    &__top-line {
        @include burger-menu__line;
        transform-origin: 2px 0%;
    }

    &__middle-line {
        @include burger-menu__line;

    }

    &__bottom-line {
        @include burger-menu__line;
        transform-origin: 2px 100%;
    }
}


// @media screen and (min-width:992px) {
    
// }

// @media screen and (min-width:1200px) {
//     .someblock {}
// }

// @media screen and (min-width:1400px) {
//     .someblock {}
// }